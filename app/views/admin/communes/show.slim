- content_for(:head_title) { "#{@commune.nom} - Admin" }

.fr-container.fr-pt-2w.fr-pb-4w
  .co-flex.co-flex--space-between
    div= render( \
      "shared/breadcrumbs", \
      links: [ \
        ["Admin", admin_communes_path], \
        ["Communes", admin_communes_path], \
      ], \
      current_page_label: @commune.nom \
    )
    div= link_to "Ancienne interface d'admin", admin_old_commune_path(@commune)

  h2
    ' #{@commune}
    = commune_status_badge(@commune)

  - if @commune.recensement_ratio.present?
    p
      ' Objets recens√©s √† #{@commune.recensement_ratio}%
      - if @commune.recensements.any? && @commune.recensements.missing_photos.empty?
        span.fr-badge.fr-badge--sm.fr-badge--warning photos manquantes

  - if @commune.started_at.present?
    p
      ' Recensement d√©marr√© le #{l(@commune.started_at, format: :long_with_weekday)}
      - if @commune.completed_at.present?
      | et termin√© le #{l(@commune.completed_at, format: :long_with_weekday)}


  h4 Usagers
  - if @commune.users.empty?
    p Aucun usager
    p
      i Cela signifie g√©n√©ralement qu'il n'y a pas d'email valide sur service-public.fr
  ul
    - @commune.users.each do |user|
      li
        ' #{user.email} ¬∑
        => link_to "envoyer un email", "mailto:#{user.email}"
        ' ¬∑
        = link_to "üë§ incarner cet usager", "mailto:#{user.email}"

  h4 #{@commune.objets.count} objet(s) dans #{@commune.edifices.count} √©difice(s)
  - @commune.edifices.each do |edifice|
    p √âdifice #{edifice_nom(edifice)}
    p #{edifice.objets.count} objets
    .fr-table
      thead
        th REF
        th Nom
        th Emplacement
        th Photo(s) M√©moire
        th cat√©gorie
        th si√®cle
      tbody
        - edifice.objets.each do |objet|
          tr
            td= objet.palissy_REF
            td= objet.palissy_TICO
            td= objet.palissy_EMPL
            td
            td= objet.palissy_CATE
            td= objet.palissy_SCLE

  h4 Dossiers de recensements
  - if @commune.past_dossiers.empty?
    p Aucun dossier de recensement d√©marr√©
  ul
    - @commune.past_dossiers.each do |dossier|
      li
        ' Dossier ##{dossier.id} ¬∑
        ' #{dossier_status_badge(dossier)} ¬∑
        ' d√©marr√© le #{l(dossier.created_at, format: :long_with_weekday)}
        - if dossier.submitted_at.present?
          ' envoy√© le #{l(dossier.submitted_at, format: :long_with_weekday)}
        - if dossier.rejected_at.present?
          ' rejet√© le #{l(dossier.rejected_at, format: :long_with_weekday)}
        - if dossier.accepted_at.present?
          ' accept√© le #{l(dossier.accepted_at, format: :long_with_weekday)}

